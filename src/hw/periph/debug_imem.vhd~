--------------------------------------------------------------------------------
--
--    Filename    : imem_ram.vhd
--    Entity      : imem_ram
--    Input from  : rom.bin
--    Description : Single Port Synchronous Random Access (Instruction) Memory
--                  for the mbLite processor.
--    Author      : Rene van Leuken, modified by Huib
--    Company     : Delft University of Technology
--
--------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_unsigned.ALL;
USE ieee.numeric_std.all;


ENTITY debug_imem IS
    GENERIC (
        WIDTH   : POSITIVE := 32;
        ABITS   : POSITIVE := 6
        );
    PORT (
        dat_o : OUT STD_LOGIC_VECTOR (WIDTH -1 DOWNTO 0);
        dat_i :  IN STD_LOGIC_VECTOR (WIDTH -1 DOWNTO 0);
        adr_i :  IN STD_LOGIC_VECTOR (ABITS -1 DOWNTO 0);
        wre_i :  IN STD_LOGIC;
        ena_i :  IN STD_LOGIC;
        clk_i :  IN STD_LOGIC
        );
END debug_imem;


ARCHITECTURE arch OF debug_imem IS
    TYPE ram_type IS array (0 TO 2**ABITS -1) OF STD_LOGIC_VECTOR (WIDTH -1 DOWNTO 0);
    SIGNAL ram : ram_type ;


BEGIN

    -- for future use (enable programming ...)
    PROCESS(clk_i)
    BEGIN
        IF RISING_EDGE(clk_i) THEN
            IF ena_i = '1' THEN
                IF wre_i = '1' THEN
                    ram(TO_INTEGER(UNSIGNED(adr_i))) <= dat_i;
                END IF;
                dat_o <= ram(TO_INTEGER(UNSIGNED(adr_i)));
           END IF;
        END IF;
    END PROCESS;

END ARCHITECTURE arch;

-- [EOF]
